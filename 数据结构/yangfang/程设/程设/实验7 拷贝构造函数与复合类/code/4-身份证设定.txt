/////////用string
#include <bits/stdc++.h>
using namespace std;

class date
{
	int y,d,m;
public:
                date(){}
	date(int y1,int m1,int d1):y(y1),m(m1),d(d1){}
	int getyear(){return y;}
	int getmonth(){return m;}
	int getday(){return d;}
};

class PID
{
	int type;
	string id;
	date cdate;
public:
     PID(int t,string _id,int _y,int _m,int _d):type(t),id(_id),cdate(_y,_m,_d){}

     PID(PID& p):type(p.type),id(p.id),cdate(p.cdate){
        if(type==1){
          type=2;

        if(cdate.getyear()>=2000)
             id.insert(6,"20");
        else
             id.insert(6,"19");
        /*
          stringstream sstr;      //年份也可以这样处理，通用性更强一点，需要万能头文件。
          string s;
          sstr << cdate.getyear();
          sstr>>s;
          id.replace(6,2,s);
        */
          int i,n=0;
          for(i=0;i<17;i++)
                n+=(id[i]-'0');
          n=n%10;
          if(n==0)
               id+='X';
          else
             {n+='0';id+=n;}
        }
    }

    void print()
   {
        cout << "type=2 birth=" <<cdate.getyear() << "."
        << setw(2)  << setfill('0')<<cdate.getmonth() << "."
        << setw(2)  << setfill('0')<< cdate.getday() << endl;
        cout << "ID=" << id << endl;
    }
};

int main()
{
	int type;
	string id;
	int y,m,d,i,t;
	cin >> t;
	while(t--)
	{
		cin >> type>>id>>y>>m>>d;
		PID p1(type,id,y,m,d);
                               PID p2(p1);
                               p2.print();
	}
	return 0;
}


//////////////////////////
//用字符数组

#include<iostream>
#include<iomanip>
#include<cstring>
using namespace std;
class date
{
	int y,d,m;
public:
    date(){}
	date(int y1,int m1,int d1):y(y1),m(m1),d(d1){}
	int getyear(){return y;}
	int getmonth(){return m;}
	int getday(){return d;}
};

class PID
{
	int type;
	char id[19];
	date cdate;
public:
    PID(int t,char _id[],int _y,int _m,int _d):type(t),cdate(_y,_m,_d)
    {
         strcpy(id,_id);
    }
   PID(PID& p):type(p.type),cdate(p.cdate){
         strcpy(id,p.id);
         int i,n=0;

        if(type==1){
           type=2;
	       for(i=16;i>7;i--)
		     id[i]=id[i-2];
           if(cdate.getyear()>=2000)
             {
                id[6]=2+'0';
		        id[7]=0+'0';
             }
           else
	         {
                id[6]=1+'0';
		        id[7]=9+'0';
	         }

           for(i=0;i<17;i++)
		     n+=(id[i]-'0');
	       n=n%10;
	       if(n==0)
		     id[17]='X';
	       else
		     id[17]=n+'0';

           id[18]='\0';
          }
    }

    void print()
   {
        cout << "type=2 birth=" <<cdate.getyear() << "."
        << setw(2)  << setfill('0')<<cdate.getmonth() << "."
        << setw(2)  << setfill('0')<< cdate.getday() << endl;
	    cout << "ID=" << id << endl;
    }
};

int main()
{
	int type;
	char id[19];
	int y,m,d,i,t;
	cin >> t;
	while(t--)
	{
		cin >> type>>id>>y>>m>>d;
		PID p1(type,id,y,m,d);
                               PID p2(p1);
                              p2.print();
	}
	return 0;
}