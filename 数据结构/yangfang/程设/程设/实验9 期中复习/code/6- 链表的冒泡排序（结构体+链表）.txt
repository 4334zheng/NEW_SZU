#include<iostream>
using namespace std;

struct Node {
    string name;
    Node *next;
};

class List{
  Node *head;
  int count;
public:
  List(){head=new Node{"",NULL};count=0;}
  void createList(){
    cin>>count;
    Node *p=head,*s;
    string name;
    for(int i=0;i<count;i++){
        cin>>name;
        s=new Node{name,NULL};
        p->next=s;
        p=s;
    }
  }

  void bubbling(){ 
    Node* p,*q,*temp;

    for(int i=0;i<count-1;i++) //count个结点，共进行count-1趟
    {   p=head;
        for(int j=0;j<count-i-1;j++)  //每趟是0~count-i-1个元素参与排序
        {
            q=p->next;             //每次比较的是q指向的结点和temp指向的结点，p是q的前一个结点
            temp=q->next;

            if((q->name)<(temp->name))
            {
                p->next=temp;
                q->next=temp->next;
                temp->next=q;
            }
            p=p->next;
        }
    }
  }

  void print(){
     Node *p=head->next;
     while(p){
        cout<<p->name<<endl;
        p=p->next;
     }
  }

};


int main() {
    int t,n;
    string name;

    cin>>t;
    while(t--){
       List l;
       l.createList();
       l.bubbling();
       l.print();
      cout<<endl; 
    }

    return 0;
}