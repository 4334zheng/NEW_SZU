#include<iostream>
#include<cmath>
using namespace std;

const double pi=3.1415;

class Point
{
    double x,y;
    public:
        Point():x(0),y(0){}
        Point(double x_value,double y_value):x(x_value),y(y_value){}
        double getX(){return x;}
        double getY(){return y;}
        void setXY(double x1,double y1){x=x1;y=y1;}
        void setX(double x_value){x=x_value;}
        void setY(double y_value){y=y_value;}
        double getDisTo(Point &p){return sqrt(pow((x-p.x),2)+pow((y-p.y),2));}
};

class Circle{
  Point centre;
  double radius;
  public:
      Circle():centre(0,0),radius(1){}
      Circle(double x,double y,double r):centre(x,y),radius(r){}
      double getArea(){return pow(radius,2)*pi;}
      void moveCentreTo(double x1,double y1){centre.setXY(x1,y1);}
      void contain(Point &p){
         double d=centre.getDisTo(p);
         if(d<=radius)
            cout<<"inside"<<endl;
         else
            cout<<"outside"<<endl;
      }
};

int main(){
  double x,y,r;
  cin>>x>>y>>r;
  Circle c(x,y,r);
  int n;
  cin>>n;
  Point *p=new Point[n];
  for(int i=0;i<n;i++){
    cin>>x>>y;
    p[i].setXY(x,y);
    c.contain(p[i]);
  }
  cin>>x>>y;
  c.moveCentreTo(x,y);
  cout<<"after move the centre of circle:"<<endl;

  for(int i=0;i<n;i++)
    c.contain(p[i]);

 delete[] p;
}