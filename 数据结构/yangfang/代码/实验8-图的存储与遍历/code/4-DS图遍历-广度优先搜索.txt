//这道题因为顶点是数字，因此就没有设立顶点数组，直接用下标表示
#include<queue>
#include<iostream>
using namespace std;

class Map{
    int len; //顶点数
    int *v;  //访问标识数组
    int **p; //邻接矩阵
public:
    Map(){
        int i,j;
        cin>>len;

        v=new int[len];
        for(i=0;i<len;i++)
            v[i]=0;

        p=new int*[len];
        for(i=0;i<len;i++){
            p[i]=new int[len];
            for(j=0;j<len;j++)
               cin>>p[i][j];
       }
    }

    void bfs(int k){  //BFS遍历，k为起始顶点
       queue<int> q;
       int temp;

       q.push(k);  //第一个顶点单独处理
       v[k]=1;

       while(!q.empty()){
          temp=q.front();
          q.pop();
          cout<<temp<<" ";

          for(int i=0;i<len;i++){
            if(p[temp][i] && !v[i]){
                q.push(i);
                v[i]=1;
            }
          }
       }
    }

    ~Map(){
        for(int i=0;i<len;i++)
            delete[] p[i];
        delete[] p;
        delete[] v;
        len=0;
    }
};

int main(){
    int t;
    cin>>t;
    while(t--){
        Map test;
        test.bfs(0);
        cout<<endl;
    }
    return 0;
}